<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>학생 조 편성 시뮬레이션</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;700&display=swap');
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f3f4f6;
        }
    </style>
</head>
<body class="bg-gray-100 min-h-screen flex items-center justify-center p-4">
    <div class="bg-white p-8 rounded-xl shadow-lg w-full max-w-4xl">
        <h1 class="text-3xl font-bold text-center mb-6 text-gray-800">학생 조 편성 시뮬레이션</h1>
        <p class="text-center text-gray-600 mb-8">
            학생들의 관심 분야와 성적을 고려하여 조를 편성합니다. 조 인원은 4~5명으로 자동 조정됩니다.
        </p>

        <!-- Configuration Section -->
        <div class="mb-8">
            <div class="flex flex-col sm:flex-row items-center justify-center space-y-4 sm:space-y-0 sm:space-x-4">
                <label for="studentCount" class="text-lg font-medium text-gray-700 whitespace-nowrap">총 학생 수:</label>
                <input type="number" id="studentCount" value="20" min="4" class="w-24 p-2 text-center border border-gray-300 rounded-md">
                <button onclick="runSimulation()" class="bg-blue-600 text-white px-6 py-2 rounded-md font-semibold hover:bg-blue-700 transition duration-300">
                    시뮬레이션 실행
                </button>
            </div>
        </div>

        <!-- Output Section -->
        <div id="results-container" class="mt-8">
            <h2 class="text-2xl font-semibold text-gray-800 mb-4 text-center">조 편성 결과</h2>
            <div id="results-grid" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
                <!-- Results will be dynamically inserted here -->
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            // 시뮬레이션 로직을 실행하는 함수
            window.runSimulation = function() {
                const inquirySubjects = ['공학', '생명', '화학', '물리', '수학'];
                const studentCountInput = document.getElementById('studentCount');
                let studentCount = parseInt(studentCountInput.value);

                if (isNaN(studentCount) || studentCount < 4) {
                    alert('학생 수는 최소 4명 이상이어야 합니다.');
                    return;
                }
                
                let students = [];
                randomSeed(42); // 고정된 시드값 설정

                // 학생 데이터 생성
                for (let i = 1; i <= studentCount; i++) {
                    const score = Math.floor(pseudoRandom() * 31) + 70; // 70~100점
                    const numSubjects = Math.floor(pseudoRandom() * 3) + 1;
                    const subjects = shuffleArray([...inquirySubjects]).slice(0, numSubjects);
                    
                    students.push({
                        id: i,
                        score: score,
                        subjects: subjects
                    });
                }
                
                // 모든 학생을 성적 순으로 정렬
                students.sort((a, b) => b.score - a.score);

                // 조 개수 계산 (조 인원을 4명 또는 5명으로 맞추기 위함)
                let numGroups = Math.ceil(studentCount / 5);
                
                // 조 배열 생성
                const groups = Array.from({ length: numGroups }, () => []);

                // '카드 돌리기' 방식으로 학생들을 조에 분배
                for (let i = 0; i < studentCount; i++) {
                    const groupIndex = i % numGroups;
                    groups[groupIndex].push(students[i]);
                }
                
                // 결과 표시
                displayResults(groups);
            };

            function displayResults(groups) {
                const resultsContainer = document.getElementById('results-grid');
                resultsContainer.innerHTML = '';
                
                groups.forEach((group, index) => {
                    const groupCard = document.createElement('div');
                    groupCard.className = 'bg-gray-50 p-6 rounded-lg shadow-md border border-gray-200';
                    groupCard.innerHTML = `
                        <h3 class="text-xl font-semibold mb-3 text-gray-700">${index + 1}조 (인원: ${group.length}명)</h3>
                        <ul class="space-y-2 text-gray-600">
                            ${group.map(student => `
                                <li class="p-2 bg-white rounded-md shadow-sm border border-gray-100 flex items-center justify-between">
                                    <span class="font-medium">학생 ${student.id}</span>
                                    <span class="text-sm text-gray-500">성적: ${student.score}점, 분야: ${student.subjects.join(', ')}</span>
                                </li>
                            `).join('')}
                        </ul>
                    `;
                    resultsContainer.appendChild(groupCard);
                });

                document.getElementById('results-container').scrollIntoView({ behavior: 'smooth' });
            }

            // --- 의사 난수 생성기 구현 (파이썬 random.seed()와 유사) ---
            let seed;
            function randomSeed(s) {
                seed = s;
            }

            function pseudoRandom() {
                const x = Math.sin(seed++) * 10000;
                return x - Math.floor(x);
            }

            function shuffleArray(array) {
                let currentIndex = array.length, randomIndex;
                while (currentIndex !== 0) {
                    randomIndex = Math.floor(pseudoRandom() * currentIndex);
                    currentIndex--;
                    [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];
                }
                return array;
            }
            
            // 페이지 로드 시 시뮬레이션 자동 실행
            window.runSimulation();
        });
    </script>
</body>
</html>
